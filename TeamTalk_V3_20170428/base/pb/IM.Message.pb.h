// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: IM.Message.proto

#ifndef PROTOBUF_IM_2eMessage_2eproto__INCLUDED
#define PROTOBUF_IM_2eMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "IM.BaseDefine.pb.h"
// @@protoc_insertion_point(includes)

namespace IM {
namespace Message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_IM_2eMessage_2eproto();
void protobuf_AssignDesc_IM_2eMessage_2eproto();
void protobuf_ShutdownFile_IM_2eMessage_2eproto();

class IMMsgData;
class IMMsgDataAck;

// ===================================================================

class IMMsgData : public ::google::protobuf::Message {
 public:
  IMMsgData();
  virtual ~IMMsgData();

  IMMsgData(const IMMsgData& from);

  inline IMMsgData& operator=(const IMMsgData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IMMsgData& default_instance();

  void Swap(IMMsgData* other);

  // implements Message ----------------------------------------------

  IMMsgData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IMMsgData& from);
  void MergeFrom(const IMMsgData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 from_user_id = 1;
  inline bool has_from_user_id() const;
  inline void clear_from_user_id();
  static const int kFromUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 from_user_id() const;
  inline void set_from_user_id(::google::protobuf::uint32 value);

  // required uint32 to_session_id = 2;
  inline bool has_to_session_id() const;
  inline void clear_to_session_id();
  static const int kToSessionIdFieldNumber = 2;
  inline ::google::protobuf::uint32 to_session_id() const;
  inline void set_to_session_id(::google::protobuf::uint32 value);

  // required uint32 msg_id = 3;
  inline bool has_msg_id() const;
  inline void clear_msg_id();
  static const int kMsgIdFieldNumber = 3;
  inline ::google::protobuf::uint32 msg_id() const;
  inline void set_msg_id(::google::protobuf::uint32 value);

  // required uint32 create_time = 4;
  inline bool has_create_time() const;
  inline void clear_create_time();
  static const int kCreateTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 create_time() const;
  inline void set_create_time(::google::protobuf::uint32 value);

  // required .IM.BaseDefine.MsgType msg_type = 5;
  inline bool has_msg_type() const;
  inline void clear_msg_type();
  static const int kMsgTypeFieldNumber = 5;
  inline ::IM::BaseDefine::MsgType msg_type() const;
  inline void set_msg_type(::IM::BaseDefine::MsgType value);

  // required bytes msg_data = 6;
  inline bool has_msg_data() const;
  inline void clear_msg_data();
  static const int kMsgDataFieldNumber = 6;
  inline const ::std::string& msg_data() const;
  inline void set_msg_data(const ::std::string& value);
  inline void set_msg_data(const char* value);
  inline void set_msg_data(const void* value, size_t size);
  inline ::std::string* mutable_msg_data();
  inline ::std::string* release_msg_data();
  inline void set_allocated_msg_data(::std::string* msg_data);

  // @@protoc_insertion_point(class_scope:IM.Message.IMMsgData)
 private:
  inline void set_has_from_user_id();
  inline void clear_has_from_user_id();
  inline void set_has_to_session_id();
  inline void clear_has_to_session_id();
  inline void set_has_msg_id();
  inline void clear_has_msg_id();
  inline void set_has_create_time();
  inline void clear_has_create_time();
  inline void set_has_msg_type();
  inline void clear_has_msg_type();
  inline void set_has_msg_data();
  inline void clear_has_msg_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 from_user_id_;
  ::google::protobuf::uint32 to_session_id_;
  ::google::protobuf::uint32 msg_id_;
  ::google::protobuf::uint32 create_time_;
  ::std::string* msg_data_;
  int msg_type_;
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto();
  friend void protobuf_AssignDesc_IM_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_IM_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static IMMsgData* default_instance_;
};
// -------------------------------------------------------------------

class IMMsgDataAck : public ::google::protobuf::Message {
 public:
  IMMsgDataAck();
  virtual ~IMMsgDataAck();

  IMMsgDataAck(const IMMsgDataAck& from);

  inline IMMsgDataAck& operator=(const IMMsgDataAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IMMsgDataAck& default_instance();

  void Swap(IMMsgDataAck* other);

  // implements Message ----------------------------------------------

  IMMsgDataAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IMMsgDataAck& from);
  void MergeFrom(const IMMsgDataAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // required uint32 session_id = 2;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 2;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);

  // required uint32 msg_id = 3;
  inline bool has_msg_id() const;
  inline void clear_msg_id();
  static const int kMsgIdFieldNumber = 3;
  inline ::google::protobuf::uint32 msg_id() const;
  inline void set_msg_id(::google::protobuf::uint32 value);

  // required .IM.BaseDefine.SessionType session_type = 4;
  inline bool has_session_type() const;
  inline void clear_session_type();
  static const int kSessionTypeFieldNumber = 4;
  inline ::IM::BaseDefine::SessionType session_type() const;
  inline void set_session_type(::IM::BaseDefine::SessionType value);

  // @@protoc_insertion_point(class_scope:IM.Message.IMMsgDataAck)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_session_id();
  inline void clear_has_session_id();
  inline void set_has_msg_id();
  inline void clear_has_msg_id();
  inline void set_has_session_type();
  inline void clear_has_session_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 msg_id_;
  int session_type_;
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto();
  friend void protobuf_AssignDesc_IM_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_IM_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static IMMsgDataAck* default_instance_;
};
// ===================================================================


// ===================================================================

// IMMsgData

// required uint32 from_user_id = 1;
inline bool IMMsgData::has_from_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IMMsgData::set_has_from_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IMMsgData::clear_has_from_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IMMsgData::clear_from_user_id() {
  from_user_id_ = 0u;
  clear_has_from_user_id();
}
inline ::google::protobuf::uint32 IMMsgData::from_user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgData.from_user_id)
  return from_user_id_;
}
inline void IMMsgData::set_from_user_id(::google::protobuf::uint32 value) {
  set_has_from_user_id();
  from_user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgData.from_user_id)
}

// required uint32 to_session_id = 2;
inline bool IMMsgData::has_to_session_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IMMsgData::set_has_to_session_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IMMsgData::clear_has_to_session_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IMMsgData::clear_to_session_id() {
  to_session_id_ = 0u;
  clear_has_to_session_id();
}
inline ::google::protobuf::uint32 IMMsgData::to_session_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgData.to_session_id)
  return to_session_id_;
}
inline void IMMsgData::set_to_session_id(::google::protobuf::uint32 value) {
  set_has_to_session_id();
  to_session_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgData.to_session_id)
}

// required uint32 msg_id = 3;
inline bool IMMsgData::has_msg_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IMMsgData::set_has_msg_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IMMsgData::clear_has_msg_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IMMsgData::clear_msg_id() {
  msg_id_ = 0u;
  clear_has_msg_id();
}
inline ::google::protobuf::uint32 IMMsgData::msg_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgData.msg_id)
  return msg_id_;
}
inline void IMMsgData::set_msg_id(::google::protobuf::uint32 value) {
  set_has_msg_id();
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgData.msg_id)
}

// required uint32 create_time = 4;
inline bool IMMsgData::has_create_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IMMsgData::set_has_create_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IMMsgData::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IMMsgData::clear_create_time() {
  create_time_ = 0u;
  clear_has_create_time();
}
inline ::google::protobuf::uint32 IMMsgData::create_time() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgData.create_time)
  return create_time_;
}
inline void IMMsgData::set_create_time(::google::protobuf::uint32 value) {
  set_has_create_time();
  create_time_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgData.create_time)
}

// required .IM.BaseDefine.MsgType msg_type = 5;
inline bool IMMsgData::has_msg_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IMMsgData::set_has_msg_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IMMsgData::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IMMsgData::clear_msg_type() {
  msg_type_ = 1;
  clear_has_msg_type();
}
inline ::IM::BaseDefine::MsgType IMMsgData::msg_type() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgData.msg_type)
  return static_cast< ::IM::BaseDefine::MsgType >(msg_type_);
}
inline void IMMsgData::set_msg_type(::IM::BaseDefine::MsgType value) {
  assert(::IM::BaseDefine::MsgType_IsValid(value));
  set_has_msg_type();
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgData.msg_type)
}

// required bytes msg_data = 6;
inline bool IMMsgData::has_msg_data() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IMMsgData::set_has_msg_data() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IMMsgData::clear_has_msg_data() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IMMsgData::clear_msg_data() {
  if (msg_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_data_->clear();
  }
  clear_has_msg_data();
}
inline const ::std::string& IMMsgData::msg_data() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgData.msg_data)
  return *msg_data_;
}
inline void IMMsgData::set_msg_data(const ::std::string& value) {
  set_has_msg_data();
  if (msg_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_data_ = new ::std::string;
  }
  msg_data_->assign(value);
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgData.msg_data)
}
inline void IMMsgData::set_msg_data(const char* value) {
  set_has_msg_data();
  if (msg_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_data_ = new ::std::string;
  }
  msg_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.Message.IMMsgData.msg_data)
}
inline void IMMsgData::set_msg_data(const void* value, size_t size) {
  set_has_msg_data();
  if (msg_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_data_ = new ::std::string;
  }
  msg_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMMsgData.msg_data)
}
inline ::std::string* IMMsgData::mutable_msg_data() {
  set_has_msg_data();
  if (msg_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:IM.Message.IMMsgData.msg_data)
  return msg_data_;
}
inline ::std::string* IMMsgData::release_msg_data() {
  clear_has_msg_data();
  if (msg_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = msg_data_;
    msg_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IMMsgData::set_allocated_msg_data(::std::string* msg_data) {
  if (msg_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msg_data_;
  }
  if (msg_data) {
    set_has_msg_data();
    msg_data_ = msg_data;
  } else {
    clear_has_msg_data();
    msg_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMMsgData.msg_data)
}

// -------------------------------------------------------------------

// IMMsgDataAck

// required uint32 user_id = 1;
inline bool IMMsgDataAck::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IMMsgDataAck::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IMMsgDataAck::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IMMsgDataAck::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 IMMsgDataAck::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgDataAck.user_id)
  return user_id_;
}
inline void IMMsgDataAck::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgDataAck.user_id)
}

// required uint32 session_id = 2;
inline bool IMMsgDataAck::has_session_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IMMsgDataAck::set_has_session_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IMMsgDataAck::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IMMsgDataAck::clear_session_id() {
  session_id_ = 0u;
  clear_has_session_id();
}
inline ::google::protobuf::uint32 IMMsgDataAck::session_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgDataAck.session_id)
  return session_id_;
}
inline void IMMsgDataAck::set_session_id(::google::protobuf::uint32 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgDataAck.session_id)
}

// required uint32 msg_id = 3;
inline bool IMMsgDataAck::has_msg_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IMMsgDataAck::set_has_msg_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IMMsgDataAck::clear_has_msg_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IMMsgDataAck::clear_msg_id() {
  msg_id_ = 0u;
  clear_has_msg_id();
}
inline ::google::protobuf::uint32 IMMsgDataAck::msg_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgDataAck.msg_id)
  return msg_id_;
}
inline void IMMsgDataAck::set_msg_id(::google::protobuf::uint32 value) {
  set_has_msg_id();
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgDataAck.msg_id)
}

// required .IM.BaseDefine.SessionType session_type = 4;
inline bool IMMsgDataAck::has_session_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IMMsgDataAck::set_has_session_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IMMsgDataAck::clear_has_session_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IMMsgDataAck::clear_session_type() {
  session_type_ = 1;
  clear_has_session_type();
}
inline ::IM::BaseDefine::SessionType IMMsgDataAck::session_type() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgDataAck.session_type)
  return static_cast< ::IM::BaseDefine::SessionType >(session_type_);
}
inline void IMMsgDataAck::set_session_type(::IM::BaseDefine::SessionType value) {
  assert(::IM::BaseDefine::SessionType_IsValid(value));
  set_has_session_type();
  session_type_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgDataAck.session_type)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Message
}  // namespace IM

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_IM_2eMessage_2eproto__INCLUDED
